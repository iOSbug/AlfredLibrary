{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "UIKit",
        "printedName": "UIKit",
        "declKind": "Import",
        "moduleName": "AlfredLockBinder",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "AlfredLockManager",
        "printedName": "AlfredLockManager",
        "declKind": "Import",
        "moduleName": "AlfredLockBinder"
      },
      {
        "kind": "Import",
        "name": "AlfredNetManager",
        "printedName": "AlfredNetManager",
        "declKind": "Import",
        "moduleName": "AlfredLockBinder"
      },
      {
        "kind": "TypeDecl",
        "name": "LockBinderManager",
        "printedName": "LockBinderManager",
        "children": [
          {
            "kind": "Var",
            "name": "shared",
            "printedName": "shared",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "LockBinderManager",
                "printedName": "AlfredLockBinder.LockBinderManager",
                "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager"
              }
            ],
            "declKind": "Var",
            "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager(cpy)shared",
            "mangledName": "$s16AlfredLockBinder0bC7ManagerC6sharedACvpZ",
            "moduleName": "AlfredLockBinder",
            "static": true,
            "declAttributes": [
              "HasInitialValue",
              "Final",
              "HasStorage",
              "AccessControl",
              "ObjC"
            ],
            "isLet": true,
            "hasStorage": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "LockBinderManager",
                    "printedName": "AlfredLockBinder.LockBinderManager",
                    "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager"
                  }
                ],
                "declKind": "Accessor",
                "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager(cm)shared",
                "mangledName": "$s16AlfredLockBinder0bC7ManagerC6sharedACvgZ",
                "moduleName": "AlfredLockBinder",
                "static": true,
                "implicit": true,
                "declAttributes": [
                  "Final",
                  "ObjC"
                ],
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "searchDeviceList",
            "printedName": "searchDeviceList(timeout:name:success:failure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "([AlfredCore.AlfredDeviceBindStatus]) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Array",
                    "printedName": "[AlfredCore.AlfredDeviceBindStatus]",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AlfredDeviceBindStatus",
                        "printedName": "AlfredCore.AlfredDeviceBindStatus",
                        "usr": "c:@M@AlfredCore@objc(cs)AlfredDeviceBindStatus"
                      }
                    ],
                    "usr": "s:Sa"
                  }
                ]
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(AlfredCore.AlfredError, Swift.String?) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(AlfredCore.AlfredError, Swift.String?)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AlfredError",
                        "printedName": "AlfredCore.AlfredError",
                        "usr": "c:@E@AlfredError"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "Swift.String?",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ],
                        "usr": "s:Sq"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager(im)searchDeviceListWithTimeout:name:success:failure:",
            "mangledName": "$s16AlfredLockBinder0bC7ManagerC16searchDeviceList7timeout4name7success7failureySi_SSySay0A4Core0aF10BindStatusCGcySo0A5ErrorV_SSSgtctF",
            "moduleName": "AlfredLockBinder",
            "isOpen": true,
            "objc_name": "searchDeviceListWithTimeout:name:success:failure:",
            "declAttributes": [
              "AccessControl",
              "ObjC",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "bindLock",
            "printedName": "bindLock(device:mcode:success:failure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "AlfredDeviceBindStatus",
                "printedName": "AlfredCore.AlfredDeviceBindStatus",
                "usr": "c:@M@AlfredCore@objc(cs)AlfredDeviceBindStatus"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(AlfredCore.AlfredLock) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "AlfredLock",
                    "printedName": "AlfredCore.AlfredLock",
                    "usr": "c:@M@AlfredCore@objc(cs)AlfredLock"
                  }
                ]
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(AlfredCore.AlfredError, Swift.String?) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(AlfredCore.AlfredError, Swift.String?)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AlfredError",
                        "printedName": "AlfredCore.AlfredError",
                        "usr": "c:@E@AlfredError"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "Swift.String?",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ],
                        "usr": "s:Sq"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager(im)bindLockWithDevice:mcode:success:failure:",
            "mangledName": "$s16AlfredLockBinder0bC7ManagerC04bindB06device5mcode7success7failurey0A4Core0A16DeviceBindStatusC_SSyAI0aB0CcySo0A5ErrorV_SSSgtctF",
            "moduleName": "AlfredLockBinder",
            "isOpen": true,
            "objc_name": "bindLockWithDevice:mcode:success:failure:",
            "declAttributes": [
              "AccessControl",
              "ObjC",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "unbindLock",
            "printedName": "unbindLock(deviceId:success:failure:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(AlfredCore.AlfredError, Swift.String?) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Tuple",
                    "printedName": "(AlfredCore.AlfredError, Swift.String?)",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "AlfredError",
                        "printedName": "AlfredCore.AlfredError",
                        "usr": "c:@E@AlfredError"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Optional",
                        "printedName": "Swift.String?",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          }
                        ],
                        "usr": "s:Sq"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "Func",
            "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager(im)unbindLockWithDeviceId:success:failure:",
            "mangledName": "$s16AlfredLockBinder0bC7ManagerC06unbindB08deviceId7success7failureySS_yycySo0A5ErrorV_SSSgtctF",
            "moduleName": "AlfredLockBinder",
            "isOpen": true,
            "objc_name": "unbindLockWithDeviceId:success:failure:",
            "declAttributes": [
              "AccessControl",
              "ObjC",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "LockBinderManager",
                "printedName": "AlfredLockBinder.LockBinderManager",
                "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager"
              }
            ],
            "declKind": "Constructor",
            "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager(im)init",
            "mangledName": "$s16AlfredLockBinder0bC7ManagerCACycfc",
            "moduleName": "AlfredLockBinder",
            "overriding": true,
            "implicit": true,
            "objc_name": "init",
            "declAttributes": [
              "Dynamic",
              "ObjC",
              "Override"
            ],
            "init_kind": "Designated"
          }
        ],
        "declKind": "Class",
        "usr": "c:@M@AlfredLockBinder@objc(cs)LockBinderManager",
        "mangledName": "$s16AlfredLockBinder0bC7ManagerC",
        "moduleName": "AlfredLockBinder",
        "isOpen": true,
        "declAttributes": [
          "AccessControl",
          "ObjC"
        ],
        "superclassUsr": "c:objc(cs)NSObject",
        "inheritsConvenienceInitializers": true,
        "superclassNames": [
          "ObjectiveC.NSObject"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CVarArg",
            "printedName": "CVarArg",
            "usr": "s:s7CVarArgP",
            "mangledName": "$ss7CVarArgP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObservingPublishing",
            "printedName": "_KeyValueCodingAndObservingPublishing",
            "usr": "s:10Foundation37_KeyValueCodingAndObservingPublishingP",
            "mangledName": "$s10Foundation37_KeyValueCodingAndObservingPublishingP"
          },
          {
            "kind": "Conformance",
            "name": "_KeyValueCodingAndObserving",
            "printedName": "_KeyValueCodingAndObserving",
            "usr": "s:10Foundation27_KeyValueCodingAndObservingP",
            "mangledName": "$s10Foundation27_KeyValueCodingAndObservingP"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "CustomDebugStringConvertible",
            "printedName": "CustomDebugStringConvertible",
            "usr": "s:s28CustomDebugStringConvertibleP",
            "mangledName": "$ss28CustomDebugStringConvertibleP"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": []
}