// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name AlfredLockBinder
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AlfredLockBinder
import AlfredLockManager
import AlfredNetManager
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers public class LockBinderManager : ObjectiveC.NSObject {
  @objc public static let shared: AlfredLockBinder.LockBinderManager
  @objc public func searchDeviceList(timeout: Swift.Int, name: Swift.String, success: @escaping (([AlfredCore.AlfredDeviceBindStatus]) -> ()), failure: @escaping AlfredCore.AlfredErrorCallback)
  @objc public func bindLock(device: AlfredCore.AlfredDeviceBindStatus, mcode: Swift.String, success: @escaping ((AlfredCore.AlfredLock) -> ()), failure: @escaping AlfredCore.AlfredErrorCallback)
  @objc public func unbindLock(deviceId: Swift.String, success: @escaping (() -> ()), failure: @escaping AlfredCore.AlfredErrorCallback)
  @objc override dynamic public init()
  @objc deinit
}
